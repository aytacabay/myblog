{"ast":null,"code":"var _jsxFileName = \"/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/src/components/comment/comment.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Commentbox from './commentbox';\n\nfunction Comment() {\n  async function changeCommentRules(data) {\n    const options = {\n      url: 'http://192.168.254.251:8558/admin-comment-set-rule-change',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      data: data\n    };\n    await axios(options).then(response => {\n      alert('Comment Basarili bir sekilde degistirildi');\n    });\n  }\n\n  const [lastData, setLastData] = useState([]);\n\n  async function getLastComment() {\n    await axios.get('http://localhost:8558/admin-comment-get-all').then(function (response) {\n      setLastData(response.data.getData);\n    });\n  }\n\n  function ignoreFunc(parentId, childId) {\n    let data = {\n      parentNodeId: parentId,\n      childNodeId: childId,\n      rule: true\n    };\n    changeCommentRules(data);\n  }\n\n  function readedFunc(parentId, childId) {\n    let data = {\n      parentNodeId: parentId,\n      childNodeId: childId,\n      rule: true\n    };\n    changeCommentRules(data);\n  }\n\n  useEffect(() => {\n    getLastComment();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, lastData.map(item => {\n    return item.comment.map(item2 => {\n      if (!item2.didYouRead) {\n        return /*#__PURE__*/React.createElement(Commentbox, {\n          key: item2._id,\n          parentNodeId: item._id,\n          data: item2,\n          ignoreFunc: ignoreFunc,\n          readedFunc: readedFunc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }\n        });\n      } else {\n        return '';\n      }\n    });\n  }));\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/src/components/comment/comment.js"],"names":["React","useEffect","useState","axios","Commentbox","Comment","changeCommentRules","data","options","url","method","headers","then","response","alert","lastData","setLastData","getLastComment","get","getData","ignoreFunc","parentId","childId","parentNodeId","childNodeId","rule","readedFunc","map","item","comment","item2","didYouRead","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,OAAT,GAAmB;AAIf,iBAAeC,kBAAf,CAAkCC,IAAlC,EAAwC;AACpC,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAE,2DADO;AAEZC,MAAAA,MAAM,EAAE,MAFI;AAGZC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAHG;AAOZJ,MAAAA,IAAI,EAAEA;AAPM,KAAhB;AASA,UAAMJ,KAAK,CAACK,OAAD,CAAL,CAAeI,IAAf,CAAqBC,QAAD,IAAc;AAAEC,MAAAA,KAAK,CAAC,2CAAD,CAAL;AAAoD,KAAxF,CAAN;AACH;;AAED,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;;AACA,iBAAee,cAAf,GAAgC;AAC5B,UAAMd,KAAK,CAACe,GAAN,CAAU,6CAAV,EACDN,IADC,CACI,UAAUC,QAAV,EAAoB;AACtBG,MAAAA,WAAW,CAACH,QAAQ,CAACN,IAAT,CAAcY,OAAf,CAAX;AACH,KAHC,CAAN;AAIH;;AAED,WAASC,UAAT,CAAoBC,QAApB,EAA8BC,OAA9B,EAAuC;AACnC,QAAIf,IAAI,GAAG;AACPgB,MAAAA,YAAY,EAAEF,QADP;AAEPG,MAAAA,WAAW,EAAEF,OAFN;AAGPG,MAAAA,IAAI,EAAE;AAHC,KAAX;AAKAnB,IAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACH;;AACD,WAASmB,UAAT,CAAoBL,QAApB,EAA8BC,OAA9B,EAAuC;AACnC,QAAIf,IAAI,GAAG;AACPgB,MAAAA,YAAY,EAAEF,QADP;AAEPG,MAAAA,WAAW,EAAEF,OAFN;AAGPG,MAAAA,IAAI,EAAE;AAHC,KAAX;AAKAnB,IAAAA,kBAAkB,CAACC,IAAD,CAAlB;AACH;;AAEDN,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI,0CAGQF,QAAQ,CAACY,GAAT,CAAaC,IAAI,IAAI;AACjB,WAAOA,IAAI,CAACC,OAAL,CAAaF,GAAb,CAAiBG,KAAK,IAAI;AAC7B,UAAI,CAACA,KAAK,CAACC,UAAX,EAAuB;AACnB,4BAAO,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAED,KAAK,CAACE,GAAvB;AAA4B,UAAA,YAAY,EAAEJ,IAAI,CAACI,GAA/C;AAAoD,UAAA,IAAI,EAAEF,KAA1D;AAAiE,UAAA,UAAU,EAAEV,UAA7E;AAAyF,UAAA,UAAU,EAAEM,UAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,MAEO;AACH,eAAO,EAAP;AACH;AACJ,KANM,CAAP;AAOH,GARD,CAHR,CADJ;AAiBH;;AACD,eAAerB,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\n\nimport Commentbox from './commentbox'\n\nfunction Comment() {\n\n\n\n    async function changeCommentRules(data) {\n        const options = {\n            url: 'http://192.168.254.251:8558/admin-comment-set-rule-change',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: data\n        };\n        await axios(options).then((response) => { alert('Comment Basarili bir sekilde degistirildi') });\n    }\n\n    const [lastData, setLastData] = useState([]);\n    async function getLastComment() {\n        await axios.get('http://localhost:8558/admin-comment-get-all')\n            .then(function (response) {\n                setLastData(response.data.getData)\n            })\n    }\n\n    function ignoreFunc(parentId, childId) {\n        let data = {\n            parentNodeId: parentId,\n            childNodeId: childId,\n            rule: true\n        }\n        changeCommentRules(data)\n    }\n    function readedFunc(parentId, childId) {\n        let data = {\n            parentNodeId: parentId,\n            childNodeId: childId,\n            rule: true\n        }\n        changeCommentRules(data)\n    }\n\n    useEffect(() => {\n        getLastComment()\n    }, [])\n\n\n    return (\n        <>\n\n            {\n                lastData.map(item => {\n                    return item.comment.map(item2 => {\n                        if (!item2.didYouRead) {\n                            return <Commentbox key={item2._id} parentNodeId={item._id} data={item2} ignoreFunc={ignoreFunc} readedFunc={readedFunc} />\n                        } else {\n                            return ''\n                        }\n                    })\n                })\n            }\n\n        </>\n    );\n}\nexport default Comment;"]},"metadata":{},"sourceType":"module"}