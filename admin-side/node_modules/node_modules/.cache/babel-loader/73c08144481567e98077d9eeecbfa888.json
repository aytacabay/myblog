{"ast":null,"code":"import _regeneratorRuntime from\"/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Contacttbox from'./contacttbox';import AlertContactbox from'./alertcontactbox';import axios from'axios';export default function Contact(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),check=_useState2[0],setCheck=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),lastData=_useState4[0],setLastData=_useState4[1];function getLastComment(){return _getLastComment.apply(this,arguments);}function _getLastComment(){_getLastComment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('http://192.168.254.2:9000/contact-get-content').then(function(response){setLastData(response.data.getData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return _getLastComment.apply(this,arguments);}useEffect(function(){getLastComment();setCheck(0);},[check]);function changeCommentRules(_x){return _changeCommentRules.apply(this,arguments);}function _changeCommentRules(){_changeCommentRules=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var options;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:options={url:'http://192.168.254.2:9000/admin-contact-set-rule-change/',method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json;charset=UTF-8'},data:data};_context2.next=3;return axios(options).then(function(response){alert('Contact Basarili bir sekilde degistirildi');});case 3:setCheck(1);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _changeCommentRules.apply(this,arguments);}function readedFunc(parentId){var data={parentNodeId:String(parentId),rule:{name:'readed',rule:true},pass:'5@#1ˆ2*{&!c'};changeCommentRules(data);}return/*#__PURE__*/React.createElement(React.Fragment,null,lastData.length>0?lastData.map(function(item){return/*#__PURE__*/React.createElement(Contacttbox,{key:item._id,data:item,readedFunc:readedFunc});}):/*#__PURE__*/React.createElement(AlertContactbox,null));}","map":{"version":3,"sources":["/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/src/components/contact/contact.js"],"names":["React","useState","useEffect","Contacttbox","AlertContactbox","axios","Contact","check","setCheck","lastData","setLastData","getLastComment","get","then","response","data","getData","changeCommentRules","options","url","method","headers","alert","readedFunc","parentId","parentNodeId","String","rule","name","pass","length","map","item","_id"],"mappings":"2fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,cAAe,SAASC,CAAAA,OAAT,EAAmB,eACJL,QAAQ,CAAC,CAAD,CADJ,wCACvBM,KADuB,eAChBC,QADgB,8BAIEP,QAAQ,CAAC,EAAD,CAJV,yCAIvBQ,QAJuB,eAIbC,WAJa,uBAKfC,CAAAA,cALe,oJAK9B,yJACUN,CAAAA,KAAK,CAACO,GAAN,CAAU,+CAAV,EACDC,IADC,CACI,SAAUC,QAAV,CAAoB,CACtBJ,WAAW,CAACI,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAX,CACH,CAHC,CADV,uDAL8B,iDAY9Bd,SAAS,CAAC,UAAM,CACZS,cAAc,GACdH,QAAQ,CAAC,CAAD,CAAR,CACH,CAHQ,CAGN,CAACD,KAAD,CAHM,CAAT,CAZ8B,QAiBfU,CAAAA,kBAjBe,kKAiB9B,kBAAkCF,IAAlC,kIACUG,OADV,CACoB,CACZC,GAAG,CAAE,0DADO,CAEZC,MAAM,CAAE,MAFI,CAGZC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,gCAFX,CAHG,CAOZN,IAAI,CAAEA,IAPM,CADpB,wBAUUV,CAAAA,KAAK,CAACa,OAAD,CAAL,CAAeL,IAAf,CAAoB,SAACC,QAAD,CAAc,CAAEQ,KAAK,CAAC,2CAAD,CAAL,CAAoD,CAAxF,CAVV,QAWId,QAAQ,CAAC,CAAD,CAAR,CAXJ,wDAjB8B,qDA+B9B,QAASe,CAAAA,UAAT,CAAoBC,QAApB,CAA8B,CAC1B,GAAIT,CAAAA,IAAI,CAAG,CACPU,YAAY,CAAEC,MAAM,CAACF,QAAD,CADb,CAEPG,IAAI,CAAE,CACFC,IAAI,CAAE,QADJ,CAEFD,IAAI,CAAE,IAFJ,CAFC,CAMPE,IAAI,CAAE,aANC,CAAX,CAQAZ,kBAAkB,CAACF,IAAD,CAAlB,CACH,CAED,mBACI,wCAESN,QAAQ,CAACqB,MAAT,CAAkB,CAAnB,CACIrB,QAAQ,CAACsB,GAAT,CAAa,SAAAC,IAAI,CAAI,CACjB,mBAAO,oBAAC,WAAD,EAAa,GAAG,CAAEA,IAAI,CAACC,GAAvB,CAA4B,IAAI,CAAED,IAAlC,CAAwC,UAAU,CAAET,UAApD,EAAP,CACH,CAFD,CADJ,cAKI,oBAAC,eAAD,MAPZ,CADJ,CAYH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Contacttbox from './contacttbox'\nimport AlertContactbox from './alertcontactbox'\n\nimport axios from 'axios'\n\n\nexport default function Contact() {\n    const [check, setCheck] = useState(0)\n\n\n    const [lastData, setLastData] = useState([]);\n    async function getLastComment() {\n        await axios.get('http://192.168.254.2:9000/contact-get-content')\n            .then(function (response) {\n                setLastData(response.data.getData)\n            })\n    }\n\n    useEffect(() => {\n        getLastComment()\n        setCheck(0)\n    }, [check])\n\n    async function changeCommentRules(data) {\n        const options = {\n            url: 'http://192.168.254.2:9000/admin-contact-set-rule-change/',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: data\n        };\n        await axios(options).then((response) => { alert('Contact Basarili bir sekilde degistirildi') });\n        setCheck(1)\n    }\n\n    function readedFunc(parentId) {\n        let data = {\n            parentNodeId: String(parentId),\n            rule: {\n                name: 'readed',\n                rule: true\n            },\n            pass: '5@#1ˆ2*{&!c'\n        }\n        changeCommentRules(data)\n    }\n\n    return (\n        <>\n            {\n                (lastData.length > 0) ?\n                    lastData.map(item => {\n                        return <Contacttbox key={item._id} data={item} readedFunc={readedFunc} />\n                    })\n                    :\n                    <AlertContactbox />\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}