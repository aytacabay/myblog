{"ast":null,"code":"var _jsxFileName = \"/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/src/components/contentdata/contentdata.js\";\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\n\nfunction ContentData() {\n  let date = new Date();\n  const headerRef = useRef();\n  const seoheaderRef = useRef();\n  const tagRef = useRef();\n  const infoRef = useRef();\n  const contentdataRef = useRef();\n  const [content, setContent] = useState([]);\n  let payload = [];\n\n  function saveFunc() {\n    let contentRef = '<p>' + contentdataRef.current.value + '</p>';\n\n    if (content.length > 0) {\n      payload.push(...content);\n    }\n\n    payload.push(contentRef);\n    setContent(payload);\n    contentdataRef.current.value = '';\n  }\n\n  function sendFunc(event) {\n    let header = headerRef.current.value;\n    let seoheader = seoheaderRef.current.value;\n    let tag = tagRef.current.value;\n    let info = infoRef.current.value;\n    let postData = {\n      _id: Math.floor(Math.random() * 20) + 10,\n      header,\n      seoheader,\n      tag,\n      date: date,\n      info,\n      content,\n      readtime: function () {\n        let readtime;\n        content.forEach(item => {\n          readtime += item.length;\n        });\n      }\n    };\n    const options = {\n      url: 'http://192.168.254.251:8558/blog-set-content/',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json;charset=UTF-8'\n      },\n      data: postData\n    };\n    axios(options).then(response => {\n      alert('Data Basarili bir sekilde gonderildi');\n    });\n    console.log(postData);\n    headerRef.current.value = '';\n    seoheaderRef.current.value = '';\n    tagRef.current.value = '';\n    contentdataRef.current.value = '';\n    infoRef.current.value = '';\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Header\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: headerRef,\n    type: \"text\",\n    id: \"header\",\n    name: \"header\",\n    placeholder: \"Header..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"seoheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Seo-Header\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: seoheaderRef,\n    type: \"text\",\n    id: \"seoheader\",\n    name: \"seoheader\",\n    placeholder: \"Header..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Tag\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: tagRef,\n    type: \"text\",\n    id: \"tag\",\n    name: \"tag\",\n    placeholder: \"Tag..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentdata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contentdata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Content-Data\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: contentdataRef,\n    id: \"contentdata\",\n    name: \"contentdata\",\n    placeholder: \"Write something..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: saveFunc,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contentinfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, \"Content-info\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: infoRef,\n    id: \"contentinfo\",\n    name: \"contentinfo\",\n    placeholder: \"Write something..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    type: \"button\",\n    onClick: sendFunc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Send\"))));\n}\n\nexport default ContentData;","map":{"version":3,"sources":["/Users/aytacabay/Desktop/MyTrials/myblog/admin-side/src/components/contentdata/contentdata.js"],"names":["React","useRef","useState","axios","ContentData","date","Date","headerRef","seoheaderRef","tagRef","infoRef","contentdataRef","content","setContent","payload","saveFunc","contentRef","current","value","length","push","sendFunc","event","header","seoheader","tag","info","postData","_id","Math","floor","random","readtime","forEach","item","options","url","method","headers","data","then","response","alert","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport axios from 'axios'\n\nfunction ContentData() {\n    let date = new Date();\n\n    const headerRef = useRef()\n    const seoheaderRef = useRef()\n    const tagRef = useRef()\n    const infoRef = useRef()\n    const contentdataRef = useRef()\n\n    const [content, setContent] = useState([])\n    let payload = [];\n    function saveFunc() {\n        let contentRef = '<p>' + contentdataRef.current.value + '</p>';\n\n        if (content.length > 0) {\n            payload.push(...content)\n        }\n        payload.push(contentRef)\n        setContent(payload)\n\n\n        contentdataRef.current.value = ''\n    }\n\n\n    function sendFunc(event) {\n        let header = headerRef.current.value;\n        let seoheader = seoheaderRef.current.value;\n        let tag = tagRef.current.value;\n        let info = infoRef.current.value;\n\n        let postData = {\n            _id: Math.floor(Math.random() * 20) + 10,\n            header,\n            seoheader,\n            tag,\n            date: date,\n            info,\n            content,\n            readtime: function () {\n                let readtime;\n                content.forEach(item => {\n                    readtime += item.length\n                })\n            }\n        };\n\n        const options = {\n            url: 'http://192.168.254.251:8558/blog-set-content/',\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json;charset=UTF-8'\n            },\n            data: postData\n        };\n\n        axios(options).then((response) => { alert('Data Basarili bir sekilde gonderildi') });\n\n        console.log(postData)\n\n        headerRef.current.value = ''\n        seoheaderRef.current.value = ''\n        tagRef.current.value = ''\n        contentdataRef.current.value = ''\n        infoRef.current.value = ''\n\n    }\n\n\n\n    return (\n        <>\n            <div className=\"container\">\n                <form action=\"\" method=\"post\">\n                    <label htmlFor=\"header\">Header</label>\n                    <input ref={headerRef} type=\"text\" id=\"header\" name=\"header\" placeholder=\"Header..\" />\n\n                    <label htmlFor=\"seoheader\">Seo-Header</label>\n                    <input ref={seoheaderRef} type=\"text\" id=\"seoheader\" name=\"seoheader\" placeholder=\"Header..\" />\n\n                    <label htmlFor=\"tag\">Tag</label>\n                    <input ref={tagRef} type=\"text\" id=\"tag\" name=\"tag\" placeholder=\"Tag..\" />\n\n                    <div className=\"contentdata\">\n                        <label htmlFor=\"contentdata\">Content-Data</label>\n                        <textarea ref={contentdataRef} id=\"contentdata\" name=\"contentdata\" placeholder=\"Write something..\"></textarea>\n                        <button className='button' onClick={saveFunc} type=\"button\">Save</button>\n                    </div>\n\n                    <label htmlFor=\"contentinfo\">Content-info</label>\n                    <textarea ref={infoRef} id=\"contentinfo\" name=\"contentinfo\" placeholder=\"Write something..\"></textarea>\n\n                    <button className='button' type=\"button\" onClick={sendFunc}>Send</button>\n                </form>\n            </div>\n        </>\n    );\n}\n\nexport default ContentData;\n"]},"metadata":{},"sourceType":"module"}